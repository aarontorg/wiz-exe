apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xapps.demo.wiz.io
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: demo.wiz.io/v1alpha1
    kind: XApp
  patchSets:
    - name: network-id
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.id
          toFieldPath: metadata.labels[networks.demo.wiz.io/network-id]
  resources:
    - name: appNamespace
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: v1
              kind: Namespace
      patches:
        - fromFieldPath: status.atProvider.manifest.metadata.labels[kubernetes.io/metadata.name]
          policy:
            fromFieldPath: Required
          toFieldPath: status.ns
          type: ToCompositeFieldPath
        - fromFieldPath: spec.id
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.manifest.metadata.name
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-namespace'
              type: string
    - name: appService
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        spec:
          #deletePolicy: Delete
          forProvider:
            manifest:
              apiVersion: v1
              kind: Service
              metadata:
                name: tasky
              spec:
                type: LoadBalancer
                selector:
                  app: tasky
                ports:
                  - protocol: TCP
                    port: 8080
                    targetPort: 8080
      patches:
        - fromFieldPath: status.ns
          policy:
            fromFieldPath: Required
          toFieldPath: metadata.labels.wiznamespace
        - fromFieldPath: spec.id
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-svc'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.manifest.metadata.name
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.manifest.metadata.namespace
    - name: appDeployment
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                labels:
                  app: tasky
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: tasky
                template:
                  metadata:
                    labels:
                      app: tasky
                  spec:
                    containers:
                      - image: garreeoke/tasky
                        imagePullPolicy: IfNotPresent
                        name: tasky
                        ports:
                          - containerPort: 8080
                            name: app
                            protocol: TCP
                        env:
                          - name: MONGODB_URI
                            value: change #mongodb://mongoadmin:mongopasswd@192.168.25.2:27017
                          - name: SECRET_KEY
                            value: key
      patches:
        - fromFieldPath: spec.dbIp
          toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].env[0].value
          transforms:
            - string:
                fmt: mongodb://mongoadmin:mongopasswd@%s:27017
              type: string
        - fromFieldPath: status.ns
          policy:
            fromFieldPath: Required
          toFieldPath: metadata.labels.wiznamespace
        - fromFieldPath: spec.id
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-dep'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.manifest.metadata.name
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.manifest.metadata.namespace